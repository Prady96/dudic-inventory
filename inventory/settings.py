"""
Django settings for inventory project.

Generated by 'django-admin startproject' using Django 2.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/


##########################   STATIC  ######################################
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'


BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
print('base dir: ',BASE_DIR)
PROJECT_DIR = os.path.dirname(os.path.abspath(__file__))
print('project dir: ',PROJECT_DIR)
STATIC_ROOT = os.path.join(PROJECT_DIR, 'static')
print('static dir: ',STATIC_ROOT)
########################################################################



# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '5@_^m^ufo^wjwf&dlb)cfb(qpepx7-n42fsggv+s=0zvp7io99'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['127.0.0.1','localhost','*','admin.dudic.io',]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'users',
    'phone_field',
    'rest_framework',
    'image_cropping',
    'easy_thumbnails',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'inventory.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'inventory.wsgi.application'


##########################   Database  ######################################

# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#     }
# }

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'inventorymangment',
        'USER': 'prady',
        'PASSWORD': 'harebol@123',
        'HOST': 'localhost',
        'PORT': '5432',
    }
}


############################################################################

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


AUTH_USER_MODEL = 'users.UserProfile'


####################### Google Cloud Storage ##############################
"""
Documentation
https://django-storages.readthedocs.io/en/latest/backends/gcloud.html

Service act for json file
https://console.cloud.google.com/apis/credentials/serviceaccountkey?_ga=2.76765843.-721779343.1576652915
"""
from google.oauth2 import service_account
FILE_UPLOAD_MAX_MEMORY_SIZE = 5242880
credentials = os.path.join(BASE_DIR, 'youslyRD-ace3b64eccaa.json')


DEFAULT_FILE_STORAGE = 'storages.backends.gcloud.GoogleCloudStorage'
GS_BUCKET_NAME = 'dudic_inventory'
GS_CREDENTIALS = service_account.Credentials.from_service_account_file(credentials)

 ##############################  ##############################  ##########

####################### Image Cropping ##############################

from easy_thumbnails.conf import Settings as thumbnail_settings
THUMBNAIL_PROCESSORS = (
    'image_cropping.thumbnail_processors.crop_corners',
) + thumbnail_settings.THUMBNAIL_PROCESSORS

 ##############################  ##############################  ####














